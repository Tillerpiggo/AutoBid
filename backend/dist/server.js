(()=>{"use strict";var e={422:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(t,r);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,i)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.Friend=void 0;const s=o(r(185)),d=new s.Schema({name:{type:String,required:!0},birthday:{type:Date,required:!0}}),u=new s.Schema({email:{type:String,required:!0,unique:!0},loginCode:{type:String,required:!0},loginCodeExpires:{type:Date},friends:[d]});u.virtual("id").get((function(){return this._id.toHexString()})),u.set("toJSON",{virtuals:!0}),d.virtual("id").get((function(){return this._id.toHexString()})),d.set("toJSON",{virtuals:!0}),u.methods.getFriend=function(e){return this.friends.find((t=>t._id.toString()===e))},t.Friend=s.default.model("Friend",d),t.default=s.default.model("User",u)},505:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(t,r);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,i)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t},s=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{u(n.next(e))}catch(e){o(e)}}function d(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,d)}u((n=n.apply(e,t||[])).next())}))},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const u=d(r(860)),a=d(r(185)),l=o(r(422)),c=d(r(142));d(r(113)),c.default.config();const f=r(769)(process.env.MAILCHIMP_API_KEY);!function(){s(this,void 0,void 0,(function*(){const e=yield f.users.ping();console.log(e)}))}(),c.default.config();const p=(0,u.default)(),v=r(582);p.use(v()),a.default.connect("mongodb://localhost/newsletter_app"),p.use(u.default.json());const g=process.env.PORT||3e3;p.listen(g,(()=>{console.log(`Server is listening on port ${g}`)})),p.post("/register",((e,t)=>s(void 0,void 0,void 0,(function*(){console.log("register called");const{email:r}=e.body,n=yield l.default.findOne({email:r});if(n)return console.log("Existing user: "+n),void t.send({user:n});const i=Math.floor(1e5+9e5*Math.random()),o=new l.default({email:r,loginCode:i,loginCodeExpires:Date.now()+9e5});console.log("saving user"),yield o.save(),console.log("user saved"),console.log("new user ",o);const s={email_address:r,status:"subscribed"};f.post("/lists/your_list_id/members/",s).then((e=>{console.log("New member added successfully.")})).catch((e=>{console.error("Error: "+e)})),t.send({user:o}),console.log("user email: "+o.email),console.log("user id: "+o._id.toString())})))),p.post("/users/:userEmail/friends",((e,t)=>s(void 0,void 0,void 0,(function*(){const{userEmail:r}=e.params,{name:n,birthday:i}=e.body;console.log("finding user with email: "+r);const o=yield l.default.findOne({email:r}),s=new l.Friend({name:n,birthday:i});o.friends.push(s),yield o.save(),t.send({message:"Friend added",user:o})})))),p.put("/users/:userId/friends/:friendId",((e,t)=>s(void 0,void 0,void 0,(function*(){const{userId:r,friendId:n}=e.params,{name:i,birthday:o}=e.body,s=yield l.default.findById(r);if(!s)return t.status(404).send({error:"User not found"});const d=s.friends.find((e=>e._id.toString()===n));if(!d)return t.status(404).send({error:"Friend not found"});i&&(d.name=i),o&&(d.birthday=o),yield s.save(),t.send({message:"Friend updated",user:s})})))),p.get("/users/:email",((e,t)=>s(void 0,void 0,void 0,(function*(){const{email:r}=e.params,n=yield l.default.findOne({email:r});if(!n)return t.status(404).send({error:"User not found"});t.send({user:n})}))))},769:e=>{e.exports=require("@mailchimp/mailchimp_transactional/src/index.js")},582:e=>{e.exports=require("cors")},142:e=>{e.exports=require("dotenv")},860:e=>{e.exports=require("express")},185:e=>{e.exports=require("mongoose")},113:e=>{e.exports=require("crypto")}},t={};!function r(n){var i=t[n];if(void 0!==i)return i.exports;var o=t[n]={exports:{}};return e[n].call(o.exports,o,o.exports,r),o.exports}(505)})();